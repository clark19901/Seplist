#include <stdio.h>
#include <stdlib.h>

const int OK=1;
const int maxmum_size=100;
const int OVERFLOW=-2;
typedef int Elemtype;
typedef struct{
Elemtype Data[maxmum_size];
int length;
}List;

int InitList(List &L)
{L.length = -1;
return OK;
}

bool EmptyList(List L)
{if(L.length==-1) return true;
else return false;}

int GetItem(List L ,int i ,int &e)
{if(i<0&&i>L.length-1) exit(-1);   //exit需要调用stdlib.h
else return e=L.Data[i];}

void InsertList(List &L,int i ,int e)
{int count=L.length;
if(i<0&&i>L.length+1) exit(-1); 
else if((L.length)>maxmum_size) exit(OVERFLOW);
else{while(count>i)
{L.Data[count+1]=L.Data[count];
count--;}}
L.Data[i]=e;
L.length ++;}

int DeleteList(List &L,int i,int e)
{int count=i;
if(i<0&&i>L.length) exit(-1); 
else if(EmptyList(L)) exit(OVERFLOW);
else{e=L.Data[i];
while(count<L.length)
{L.Data[i]=L.Data[i+1];count++;}}
L.length--;return e;}


int main()
{	List L;
int e;
int M[10]={1,2,3,4,5,3,2,1,4,5};
	InitList(L);
printf("正在初始化顺序表L... \n");
printf("检测到现在顺序表有%d个值\n",L.length+1);
	 for(int i=0;i<10;i++)
InsertList(L,i ,M[i]);
printf("依次插入顺序表：");
for(int i=0;i<10;i++)
printf("%5d",L.Data[i]);
printf("\n检测到现在顺序表有%d个值\n",L.length+1);
GetItem(L ,5 ,e);
printf("GetItem(L ,5 ,e) e=%d\n",e);

DeleteList(L,5,e);
printf("DeleteList(L,5,e) e=%d\n",e);
GetItem(L ,5 ,e);
printf("GetItem(L ,5 ,e) e=%d\n",e);
printf("现在顺序表有%d个值\n",L.length+1);
return 0;}
